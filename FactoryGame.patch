diff --git a/Source/FactoryGame/Public/Buildables/FGBuildableConveyorBelt.h b/Source/FactoryGame/Public/Buildables/FGBuildableConveyorBelt.h
index 4728d3f6..db94639b 100644
--- a/Source/FactoryGame/Public/Buildables/FGBuildableConveyorBelt.h
+++ b/Source/FactoryGame/Public/Buildables/FGBuildableConveyorBelt.h
@@ -173,6 +173,8 @@ protected:
 
 private:
 	friend class AFGConveyorBeltHologram;
+	friend class UFSConveyorBeltOperator;
+	friend class UFSAdaptiveUtil;
 
 	/** Meshes for items. */
 	UPROPERTY( Meta = ( NoAutoJson ) )
diff --git a/Source/FactoryGame/Public/Buildables/FGBuildableConveyorLift.h b/Source/FactoryGame/Public/Buildables/FGBuildableConveyorLift.h
index 00d96620..6296aaf0 100644
--- a/Source/FactoryGame/Public/Buildables/FGBuildableConveyorLift.h
+++ b/Source/FactoryGame/Public/Buildables/FGBuildableConveyorLift.h
@@ -91,6 +91,7 @@ public:
 
 private:
 	friend class AFGConveyorLiftHologram;
+	friend class UFSAdaptiveUtil;
 
 	/**
 	 * The transform of the top part.
diff --git a/Source/FactoryGame/Public/Buildables/FGBuildableJumppad.h b/Source/FactoryGame/Public/Buildables/FGBuildableJumppad.h
index aa3ec969..c1f75b4b 100644
--- a/Source/FactoryGame/Public/Buildables/FGBuildableJumppad.h
+++ b/Source/FactoryGame/Public/Buildables/FGBuildableJumppad.h
@@ -155,6 +155,9 @@ private:
 	void ConstructSplineFromTrajectoryData();
 
 protected:
+
+	friend class UFSJumppadOperator;
+	
 	/** Power capacity of the internal battery. */
 	UPROPERTY( EditDefaultsOnly, Category = "JumpPad", meta = ( ClampMin = "0.0" ) )
 	float mPowerBankCapacity;
diff --git a/Source/FactoryGame/Public/Buildables/FGBuildableLadder.h b/Source/FactoryGame/Public/Buildables/FGBuildableLadder.h
index 54fe69f4..6caa807f 100644
--- a/Source/FactoryGame/Public/Buildables/FGBuildableLadder.h
+++ b/Source/FactoryGame/Public/Buildables/FGBuildableLadder.h
@@ -58,6 +58,8 @@ private:
 
 protected:
 
+	friend class UFSLadderOperator;
+	
 	/** Width of the ladder */
 	UPROPERTY( EditDefaultsOnly, Category = "Ladder" )
 	float mWidth;
diff --git a/Source/FactoryGame/Public/Buildables/FGBuildablePipelinePump.h b/Source/FactoryGame/Public/Buildables/FGBuildablePipelinePump.h
index d96ad0b0..fbcdb43e 100644
--- a/Source/FactoryGame/Public/Buildables/FGBuildablePipelinePump.h
+++ b/Source/FactoryGame/Public/Buildables/FGBuildablePipelinePump.h
@@ -131,6 +131,9 @@ private:
 	void UpdateFlowLimitOnFluidBox();
 	
 private:
+
+	friend class UFSPumpOperator;
+	
 	/** Maximum pressure this pump applies. [meters] */
 	UPROPERTY( EditDefaultsOnly, Category = "Pump" )
 	float mMaxPressure;
diff --git a/Source/FactoryGame/Public/Buildables/FGBuildablePowerPole.h b/Source/FactoryGame/Public/Buildables/FGBuildablePowerPole.h
index 885384b2..5d07a763 100644
--- a/Source/FactoryGame/Public/Buildables/FGBuildablePowerPole.h
+++ b/Source/FactoryGame/Public/Buildables/FGBuildablePowerPole.h
@@ -77,6 +77,9 @@ protected:
 	TSubclassOf<class UFGPoleConnectionsWidget> mConnectionWidgetClass;
 
 private:
+
+	friend class UFSPowerPoleOperator;
+	
 	/** The connection on this pole. */
 	UPROPERTY( VisibleAnywhere, Category = "PowerPole" )
 	TArray<class UFGPowerConnectionComponent*> mPowerConnections;
diff --git a/Source/FactoryGame/Public/Buildables/FGBuildableRailroadTrack.h b/Source/FactoryGame/Public/Buildables/FGBuildableRailroadTrack.h
index 7278d9a2..006e23ff 100644
--- a/Source/FactoryGame/Public/Buildables/FGBuildableRailroadTrack.h
+++ b/Source/FactoryGame/Public/Buildables/FGBuildableRailroadTrack.h
@@ -169,6 +169,7 @@ protected:
 private:
 	friend class AFGRailroadTrackHologram;
 	friend class AFGRailroadSubsystem;
+	friend class UFSRailroadTrackOperator;
 
 	/** The spline component for this train track. */
 	UPROPERTY( VisibleAnywhere, Category = "Spline" )
diff --git a/Source/FactoryGame/Public/Buildables/FGBuildableResourceExtractorBase.h b/Source/FactoryGame/Public/Buildables/FGBuildableResourceExtractorBase.h
index 89259205..eca359e3 100644
--- a/Source/FactoryGame/Public/Buildables/FGBuildableResourceExtractorBase.h
+++ b/Source/FactoryGame/Public/Buildables/FGBuildableResourceExtractorBase.h
@@ -99,6 +99,9 @@ protected:
 	FName mExtractorTypeName = "";
 
 private:
+
+	friend class UFSResourceExtractorOperator;
+	
 	/** DEPRECATED - Only used for old save support. Use mExtractableResource instead.
 	*   The resource node we want to extract from.
 	*/
diff --git a/Source/FactoryGame/Public/Buildables/FGBuildableSplitterSmart.h b/Source/FactoryGame/Public/Buildables/FGBuildableSplitterSmart.h
index 6e256cc7..ba206a45 100644
--- a/Source/FactoryGame/Public/Buildables/FGBuildableSplitterSmart.h
+++ b/Source/FactoryGame/Public/Buildables/FGBuildableSplitterSmart.h
@@ -97,6 +97,9 @@ protected:
 	FOnSortRulesChanged OnSortRulesChangedDelegate;
 
 private:
+
+	friend class UFSConveyorSmartSplitterOperator;
+	
 	/** These are the sorting rules the player has entered. */
 	UPROPERTY( ReplicatedUsing = OnRep_SortRules, SaveGame, EditDefaultsOnly, Category = "Sort", Meta = (NoAutoJson = true) )
 	TArray< FSplitterSortRule > mSortRules;
diff --git a/Source/FactoryGame/Public/Buildables/FGBuildableTrainPlatform.h b/Source/FactoryGame/Public/Buildables/FGBuildableTrainPlatform.h
index 7541fb5d..9068b1da 100644
--- a/Source/FactoryGame/Public/Buildables/FGBuildableTrainPlatform.h
+++ b/Source/FactoryGame/Public/Buildables/FGBuildableTrainPlatform.h
@@ -89,6 +89,10 @@ private:
 	void AssignRailroadTrack( class AFGBuildableRailroadTrack* track );
 
 protected:
+
+	friend class UFSTrainPlatformOperator;
+	friend class UFSTrainStationOperator;
+	
 	UPROPERTY( SaveGame )
 	class AFGBuildableRailroadTrack* mRailroadTrack;
 
diff --git a/Source/FactoryGame/Public/Buildables/FGBuildableTrainPlatformCargo.h b/Source/FactoryGame/Public/Buildables/FGBuildableTrainPlatformCargo.h
index 4448474a..39e00797 100644
--- a/Source/FactoryGame/Public/Buildables/FGBuildableTrainPlatformCargo.h
+++ b/Source/FactoryGame/Public/Buildables/FGBuildableTrainPlatformCargo.h
@@ -242,6 +242,9 @@ protected:
 	TArray< class UFGPipeConnectionComponent*> mPipeOutputConnections;
 
 private:
+
+	friend class UFSTrainPlatformCargoOperator;
+	
 	/** Inventory where we transfer items to when unloading from a vehicle. Never reference this pointer directly. Use mCargoInventoryHandler->GetActiveInventory(). */
 	UPROPERTY( SaveGame )
 	class UFGInventoryComponent* mInventory;
diff --git a/Source/FactoryGame/Public/Equipment/FGWeapon.h b/Source/FactoryGame/Public/Equipment/FGWeapon.h
index 14d90377..b545ace3 100644
--- a/Source/FactoryGame/Public/Equipment/FGWeapon.h
+++ b/Source/FactoryGame/Public/Equipment/FGWeapon.h
@@ -149,6 +149,9 @@ protected:
 	FORCEINLINE AFGHUD* GetAssosiatedHud() const { return mAssosiatedHud; }
 
 protected:
+
+	friend class AFSController;
+	
 	UPROPERTY()
 	AFGHUD* mAssosiatedHud = nullptr; //[DavalliusA:Wed/20-03-2019] the base hud object will never get invalid during use, so we can use anormal pointer here to access it.
 
diff --git a/Source/FactoryGame/Public/FGBuildableSubsystem.h b/Source/FactoryGame/Public/FGBuildableSubsystem.h
index 167eb130..c7eb4d0a 100644
--- a/Source/FactoryGame/Public/FGBuildableSubsystem.h
+++ b/Source/FactoryGame/Public/FGBuildableSubsystem.h
@@ -346,6 +346,7 @@ public:
 private:
 	// Allow the Colored instance manager objects created to directly add entries into the FactoryColoredMaterialMap
 	friend class UFGFactoryMaterialInstanceManager;
+	friend class UFSSyncBuild;
 
 	/** last used net construction ID. Used to identify pending constructions over network. Will increase ID every constructed building. */
 	FNetConstructionID mLastServerNetConstructionID;
diff --git a/Source/FactoryGame/Public/FGColoredInstanceManager.h b/Source/FactoryGame/Public/FGColoredInstanceManager.h
index dff69a07..aab06e0d 100644
--- a/Source/FactoryGame/Public/FGColoredInstanceManager.h
+++ b/Source/FactoryGame/Public/FGColoredInstanceManager.h
@@ -23,6 +23,8 @@ public:
 			return HandleID >= 0;
 		}
 	private:
+		friend class UFSSelection;
+		
 		friend UFGColoredInstanceManager;
 
 		int32 HandleID = INDEX_NONE;
@@ -49,6 +51,9 @@ private:
 	class UHierarchicalInstancedStaticMeshComponent* CreateHierarchicalInstancingComponent( class UStaticMesh* staticMesh, bool useAsOccluder, FVector2D& minMaxCullDistance );
 
 private:
+
+	friend class UFSSelection;
+	
 	/** If we are only using a single color we can skip creating a HISM for every color. */
 	bool mSingleColorOnly = false;
 
diff --git a/Source/FactoryGame/Public/FGFactoryConnectionComponent.h b/Source/FactoryGame/Public/FGFactoryConnectionComponent.h
index 617d90ad..b70cda92 100644
--- a/Source/FactoryGame/Public/FGFactoryConnectionComponent.h
+++ b/Source/FactoryGame/Public/FGFactoryConnectionComponent.h
@@ -234,6 +234,9 @@ private:
 		TArray< FOverlapResult > potentialBlockers );
 
 protected:
+
+	friend class UFSConveyorOperator;
+	
 	/** Physical type of connector used for this connection. */
 	UPROPERTY( EditDefaultsOnly, Category = "Connection" )
 	EFactoryConnectionConnector mConnector;
diff --git a/Source/FactoryGame/Public/FGTrainPlatformConnection.h b/Source/FactoryGame/Public/FGTrainPlatformConnection.h
index d82b22c4..19694ab5 100644
--- a/Source/FactoryGame/Public/FGTrainPlatformConnection.h
+++ b/Source/FactoryGame/Public/FGTrainPlatformConnection.h
@@ -76,6 +76,9 @@ public:
 	FTimerHandle mDrawDebugTimerHandle;
 
 protected:
+
+	friend class UFSTrainPlatformOperator;
+	
 	/** This bool indicates an arbitrary direction of this platform. It is used for stepping through platforms 
 	*	Platforms that connect must have mismatched values for their snapped components ( i.e: 1 -> 0 || 0 -> 1 && !(1 -> 1) etc. )
 	*/
diff --git a/Source/FactoryGame/Public/Hologram/FGLadderHologram.h b/Source/FactoryGame/Public/Hologram/FGLadderHologram.h
index a1379361..c5e85081 100644
--- a/Source/FactoryGame/Public/Hologram/FGLadderHologram.h
+++ b/Source/FactoryGame/Public/Hologram/FGLadderHologram.h
@@ -55,6 +55,8 @@ protected:
 	void UpdateClearance();
 
 private:
+	friend class UFSLadderOperator;
+	
 	UPROPERTY( EditDefaultsOnly, Category = "Ladder" )
 	float mLadderBottomSnapThreshold;
 
